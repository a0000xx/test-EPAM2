import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;


public class DBConnection {
    public static Connection conn;
    public static Statement statmt;
    public static ResultSet resSet;
    public static String fileName="test3.s3db";
    // --------ПОДКЛЮЧЕНИЕ К БАЗЕ ДАННЫХ--------
    public void Conn() throws ClassNotFoundException, SQLException
    {
        conn = null;
        Class.forName("org.sqlite.JDBC");
        conn = DriverManager.getConnection("jdbc:sqlite:"+fileName);

        System.out.println("База Подключена!");
    }

    // --------Создание таблицы--------
    public void CreateDB() throws ClassNotFoundException, SQLException
    {
        statmt = conn.createStatement();
        statmt.execute("CREATE TABLE if not exists 'User' ('id' INTEGER PRIMARY KEY AUTOINCREMENT, 'name' NVARCHAR(80), 'surname' NVARCHAR(80)); ");
        statmt.execute("CREATE TABLE if not exists 'Task' ('task_id' INTEGER PRIMARY KEY AUTOINCREMENT, 'project' NVARCHAR(80), 'topic' NVARCHAR(80),'type' NVARCHAR(80)," +
                " 'priority' NVARCHAR(80), 'user_id' INT, 'description' Text); ");
        statmt.execute("CREATE TABLE if not exists 'Project' ('project_id' INTEGER PRIMARY KEY AUTOINCREMENT, 'nameOfProject' NVARCHAR(80)); ");
        System.out.println("Таблица создана или уже существует.");
    }

    // --------Заполнение таблицы--------
    public void AddUsers(Users users)
    {
        try {
            statmt.execute("INSERT INTO 'User' ('name','surname') VALUES ('"+users.getName()+"','"+users.getSurname()+"');");
        } catch (SQLException e) {
            e.printStackTrace();
        }
        System.out.println("Таблица пользователей заполнена");
    }

    // -------- Вывод таблицы--------
    public void getAllUsers() throws ClassNotFoundException, SQLException {
        resSet = statmt.executeQuery("SELECT * FROM User");

        while (resSet.next()) {
            int id= resSet.getInt("id");
            String name = resSet.getString("name");
            String surname=resSet.getString("surname");
            System.out.println("ID = "+id);
            System.out.println("Name = "+name);
            System.out.println("Surname = "+surname);
            System.out.println();
        }

    }
    public void AddTasks(Tasks tasks)
    {
        try {
            statmt.execute("INSERT INTO 'Task' ('project','topic','type','priority','user_id','description') " +
                    "VALUES ('"+tasks.getProject()+"','"+tasks.getTopic()+"','"+tasks.getType()+"','"+tasks.getPriority()+"','"+tasks.getUser()+"','"+tasks.getDescription()+"')");
        } catch (SQLException e) {
            e.printStackTrace();
        }
        System.out.println("Таблица задач заполнена");
    }
    public void getAllTasks() throws ClassNotFoundException, SQLException {
        resSet = statmt.executeQuery("SELECT * FROM Task");

        while (resSet.next()) {
            int id= resSet.getInt("task_id");
            String project = resSet.getString("project");
            String topic=resSet.getString("topic");
            String priority=resSet.getString("priority");
            int user=resSet.getInt("user_id");
            String description=resSet.getString("description");
            System.out.println("Task ID = "+id);
            System.out.println("project = "+project);
            System.out.println("topic = "+topic);
            System.out.println("priority = "+priority);
            System.out.println("user ID = "+user);
            System.out.println("description = "+description);
            System.out.println();
        }

    }
    public void AddProjects(Projects projects)
    {
        try {
            statmt.execute("INSERT INTO 'Project' ('nameOfProject') VALUES ('"+projects.getNameOfProject()+"')");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    public void getAllProjects() throws SQLException {
        resSet = statmt.executeQuery("SELECT * FROM Project");
        while (resSet.next())
        {
            int project_Id = resSet.getInt("project_id");
            String nameOfProject = resSet.getString("nameOfProject");
            System.out.println("Project ID = "+project_Id);
            System.out.println("nameOfProject = "+nameOfProject);
        }

    }




    public void CloseDB()
    {
        try {
            conn.close();
            statmt.close();
            resSet.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }

        System.out.println("Соединения закрыты");
    }

}
